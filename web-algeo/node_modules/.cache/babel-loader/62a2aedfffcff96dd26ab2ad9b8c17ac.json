{"ast":null,"code":"import { isObject, fromEntries } from \"@chakra-ui/utils\";\nimport { mergeThemeOverride } from \"../extend-theme\";\nexport function withDefaultVariant(_ref) {\n  var {\n    variant,\n    components\n  } = _ref;\n  return theme => {\n    var names = Object.keys(theme.components || {});\n\n    if (Array.isArray(components)) {\n      names = components;\n    } else if (isObject(components)) {\n      names = Object.keys(components);\n    }\n\n    return mergeThemeOverride(theme, {\n      components: fromEntries(names.map(componentName => {\n        var withVariant = {\n          defaultProps: {\n            variant\n          }\n        };\n        return [componentName, withVariant];\n      }))\n    });\n  };\n}","map":{"version":3,"sources":["../../../src/theme-extensions/with-default-variant.ts"],"names":["components","theme","names","Object","Array","isObject","mergeThemeOverride","fromEntries","componentName","withVariant","defaultProps","variant"],"mappings":"AACA,SAAA,QAAA,EAAA,WAAA,QAAA,kBAAA;AACA,SAAA,kBAAA,QAAA,iBAAA;AAEA,OAAO,SAAA,kBAAA,CAAA,IAAA,EAMY;AAAA,MANgB;AAAA,IAAA,OAAA;AAEjCA,IAAAA;AAFiC,MAMhB,IAAA;AACjB,SAAQC,KAAD,IAAW;AAChB,QAAIC,KAAK,GAAGC,MAAM,CAANA,IAAAA,CAAYF,KAAK,CAALA,UAAAA,IAAxB,EAAYE,CAAZ;;AAEA,QAAIC,KAAK,CAALA,OAAAA,CAAJ,UAAIA,CAAJ,EAA+B;AAC7BF,MAAAA,KAAK,GAALA,UAAAA;AADF,KAAA,MAEO,IAAIG,QAAQ,CAAZ,UAAY,CAAZ,EAA0B;AAC/BH,MAAAA,KAAK,GAAGC,MAAM,CAANA,IAAAA,CAARD,UAAQC,CAARD;AACD;;AAED,WAAOI,kBAAkB,CAAA,KAAA,EAAQ;AAC/BN,MAAAA,UAAU,EAAEO,WAAW,CACrB,KAAK,CAAL,GAAA,CAAWC,aAAD,IAAmB;AAC3B,YAAMC,WAAW,GAAG;AAClBC,UAAAA,YAAY,EAAE;AACZC,YAAAA;AADY;AADI,SAApB;AAKA,eAAO,CAAA,aAAA,EAAP,WAAO,CAAP;AAPmB,OACrB,CADqB;AADQ,KAAR,CAAzB;AATF,GAAA;AAsBD","sourcesContent":["import { ThemingProps } from \"@chakra-ui/system\"\nimport { Dict, isObject, fromEntries } from \"@chakra-ui/utils\"\nimport { mergeThemeOverride, ThemeExtension } from \"../extend-theme\"\n\nexport function withDefaultVariant({\n  variant,\n  components,\n}: {\n  variant: ThemingProps[\"variant\"]\n  components?: string[] | Dict\n}): ThemeExtension {\n  return (theme) => {\n    let names = Object.keys(theme.components || {})\n\n    if (Array.isArray(components)) {\n      names = components\n    } else if (isObject(components)) {\n      names = Object.keys(components)\n    }\n\n    return mergeThemeOverride(theme, {\n      components: fromEntries(\n        names.map((componentName) => {\n          const withVariant = {\n            defaultProps: {\n              variant,\n            },\n          }\n          return [componentName, withVariant]\n        }),\n      ),\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}