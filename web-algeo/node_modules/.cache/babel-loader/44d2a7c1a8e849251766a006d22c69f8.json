{"ast":null,"code":"var _jsxFileName = \"D:\\\\Informatics Sem 1\\\\Algeo\\\\Algeo02-20036\\\\web-algeo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport imgDefault from \"./images/imgDefault.jpg\";\nimport uploadBigArrow from \"./images/uploadBigArrow.png\";\nimport logoPNG from \"./images/logopng.png\";\nimport { Copyright } from './misc/Copyright';\nimport { SocialMediaLinks } from './misc/SocialMediaLinks';\nimport axios from \"axios\";\nimport { ChakraProvider, Box, Heading, Text, extendTheme, Flex, Button, Spacer, Center, Image, Stack, StackDivider } from '@chakra-ui/react';\nimport { ChevronDownIcon, ChevronRightIcon, SettingsIcon, ArrowRightIcon } from '@chakra-ui/icons';\nimport \"@fontsource/poppins/600.css\";\nimport \"@fontsource/poppins/400.css\";\nimport \"@fontsource/poppins/200.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //BG #282A37 CMPNT #01CC90\n  const config = {\n    styles: {\n      global: () => ({\n        body: {\n          bg: \"linear-gradient(90deg, rgba(40,43,56,1) 0%, rgba(51,55,72,1) 77%)\",\n          color: \"black\"\n        },\n        fonts: {\n          heading: \"Poppins\",\n          body: \"Poppins\"\n        }\n      })\n    }\n  };\n  const theme = extendTheme(config);\n  const pictureInputRef = useRef();\n  const [isUseRateSettings, setIsUseRateSettings] = useState(0);\n  const [picture, setPicture] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [compressionRates, setCompressionRates] = useState(\"med\");\n  const [compressedPicture, setCompressedPicture] = useState(\"\");\n\n  const onChangePicture = e => {\n    const file = e.target.files[0];\n\n    if (file && file.type.substr(0, 5) === \"image\") {\n      setPicture(file);\n    } else {\n      setPicture(null);\n    }\n  };\n\n  useEffect(() => {\n    if (picture) {\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n\n      reader.readAsDataURL(picture);\n    } else {\n      setPreview(null);\n    }\n  }, [picture]);\n\n  function handlePostQuery() {\n    var myParams = {\n      data: preview,\n      rates: compressionRates\n    };\n\n    if (true) {\n      axios.post('http://127.0.0.1:5000/compress', myParams).then(function (response) {\n        console.log(response);\n        setCompressedPicture(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      alert(\"The search query cannot be empty\");\n    }\n  }\n\n  const handleUseSettings = () => {\n    isUseRateSettings ? setIsUseRateSettings(0) : setIsUseRateSettings(1);\n  };\n\n  const handleLowRates = () => {\n    setCompressionRates(\"low\");\n  };\n\n  const handleMedRates = () => {\n    setCompressionRates(\"med\");\n  };\n\n  const handleHighRates = () => {\n    setCompressionRates(\"high\");\n  };\n\n  console.log(\"compressedPicture :\");\n  console.log(compressedPicture);\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      overflowX: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        color: \"#FFFFFF\",\n        fontSize: \"5xl\",\n        fontFamily: \"poppins\",\n        textAlign: \"center\",\n        mt: 10,\n        mb: 3,\n        minW: \"100vw\",\n        children: [\"Smart \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#01CC90\"\n          },\n          children: \"PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#01CC90\"\n          },\n          children: \"JPEG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 65\n        }, this), \" Compressor\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"#FFFFFF\",\n        fontFamily: \"poppins\",\n        textAlign: \"center\",\n        fontWeight: 200,\n        fontSize: \"md\",\n        children: \"An ultimate image optimizer to compress your images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        style: {\n          display: 'none'\n        },\n        onChange: onChangePicture,\n        ref: pictureInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 10,\n        children: /*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: event => {\n              event.preventDefault();\n              pictureInputRef.current.click();\n            },\n            color: \"#01CC90\",\n            borderStyle: \"dotted\",\n            borderWidth: 5,\n            borderColor: \"#01CC90\",\n            width: \"30vw\",\n            height: \"15vh\",\n            boxShadow: \"xl\",\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              width: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: preview ? /*#__PURE__*/_jsxDEV(Image, {\n                  boxSize: \"4vw\",\n                  objectFit: \"cover\",\n                  borderRadius: \"3px\",\n                  src: preview,\n                  alt: \"Upload your image\",\n                  style: {\n                    objectFit: 'cover'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/_jsxDEV(Image, {\n                  boxSize: \"4vw\",\n                  objectFit: \"cover\",\n                  borderRadius: \"3px\",\n                  src: uploadBigArrow,\n                  alt: \"Upload your image\",\n                  style: {\n                    objectFit: 'cover'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"4xl\",\n                  color: \"#FFFFFF\",\n                  children: [\"Click here to \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"#8ef1d4\"\n                    },\n                    children: \"select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 68\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  color: \"#FFFFFF\",\n                  fontSize: \"xl\",\n                  textAlign: \"left\",\n                  children: [\"or \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"#8ef1d4\"\n                    },\n                    children: \"change\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 73\n                  }, this), \" your image.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: /*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUseSettings,\n            children: isUseRateSettings ? /*#__PURE__*/_jsxDEV(Text, {\n              color: \"#FFFFFF\",\n              fontSize: \"xl\",\n              fontFamily: \"poppins\",\n              fontWeight: 200,\n              children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {\n                mr: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 13\n              }, this), \"Additional settings \", /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 12\n            }, this) : /*#__PURE__*/_jsxDEV(Text, {\n              color: \"#FFFFFF\",\n              fontSize: \"xl\",\n              fontFamily: \"poppins\",\n              fontWeight: 200,\n              children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {\n                mr: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 13\n              }, this), \"Additional settings \", /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this), isUseRateSettings ? /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: /*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              color: \"#8ef1d4\",\n              fontSize: \"xl\",\n              fontFamily: \"poppins\",\n              mr: 4,\n              fontWeight: 400,\n              children: \"Compression rates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), compressionRates === \"low\" ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleLowRates,\n              mr: 4,\n              colorScheme: \"teal\",\n              variant: \"solid\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleLowRates,\n              mr: 4,\n              colorScheme: \"teal\",\n              variant: \"outline\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), compressionRates === \"med\" ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleMedRates,\n              mr: 4,\n              colorScheme: \"teal\",\n              variant: \"solid\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleMedRates,\n              mr: 4,\n              colorScheme: \"teal\",\n              variant: \"outline\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), compressionRates === \"high\" ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleHighRates,\n              mr: 4,\n              colorScheme: \"teal\",\n              variant: \"solid\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleHighRates,\n              mr: 4,\n              colorScheme: \"teal\",\n              variant: \"outline\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 8\n      }, this) : null, /*#__PURE__*/_jsxDEV(Center, {\n        mt: 10,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          bg: \"linear-gradient(90deg, rgba(48,226,173,1) 0%, rgba(142,241,212,1) 100%)\",\n          color: \"#282A37\",\n          h: \"6vh\",\n          w: \"15vw\",\n          boxShadow: \"2xl\",\n          fontSize: \"xl\",\n          onClick: handlePostQuery,\n          children: [\"Compress PNG/JPEG \", /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n            ml: 2,\n            color: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 10,\n        children: /*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            bg: \"linear-gradient(90deg, rgba(48,226,173,1) 0%, rgba(142,241,212,1) 100%)\",\n            width: \"24vw\",\n            borderRadius: \"20px\",\n            boxShadow: \"2xl\",\n            py: 2,\n            children: [/*#__PURE__*/_jsxDEV(Center, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                color: \"black\",\n                fontSize: \"2xl\",\n                fontFamily: \"poppins\",\n                fontWeight: 600,\n                children: \"Successfully Compressed!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Center, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                color: \"black\",\n                fontSize: \"xl\",\n                fontFamily: \"poppins\",\n                children: \"0.5 seconds compression time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 10,\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            bg: \"#121633\",\n            width: \"24vw\",\n            px: \"2vw\",\n            py: \"2vw\",\n            borderRadius: \"5px\",\n            children: [/*#__PURE__*/_jsxDEV(Center, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                color: \"#01CC90\",\n                fontSize: \"3xl\",\n                fontFamily: \"poppins\",\n                mr: 4,\n                fontWeight: 600,\n                children: \"Before\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Center, {\n              mb: \"1vw\",\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                shadowBox: \"2xl\",\n                boxSize: \"20vw\",\n                objectFit: \"cover\",\n                borderRadius: \"3px\",\n                src: imgDefault,\n                alt: \"Default Image\",\n                mt: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                color: \"#FFFFFF\",\n                fontSize: \"2xl\",\n                fontFamily: \"poppins\",\n                mr: 4,\n                fontWeight: \"200\",\n                children: \"Image Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                color: \"#01CC90\",\n                fontSize: \"2xl\",\n                fontFamily: \"poppins\",\n                mr: 4,\n                children: \"testImage.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                color: \"#FFFFFF\",\n                fontSize: \"2xl\",\n                fontFamily: \"poppins\",\n                mr: 4,\n                fontWeight: \"200\",\n                children: \"Image Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                color: \"#01CC90\",\n                fontSize: \"2xl\",\n                fontFamily: \"poppins\",\n                mr: 4,\n                children: \"356.7Kb\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            bg: \"#121633\",\n            width: \"24vw\",\n            px: \"2vw\",\n            py: \"2vw\",\n            borderRadius: \"5px\",\n            children: [/*#__PURE__*/_jsxDEV(Center, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                color: \"#01CC90\",\n                fontSize: \"3xl\",\n                fontFamily: \"poppins\",\n                mr: 4,\n                fontWeight: 600,\n                children: \"After\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Center, {\n              mb: \"1vw\",\n              children: compressedPicture === \"nothing\" ? /*#__PURE__*/_jsxDEV(Image, {\n                shadowBox: \"2xl\",\n                boxSize: \"20vw\",\n                objectFit: \"cover\",\n                borderRadius: \"3px\",\n                src: imgDefault,\n                alt: \"Default Image\",\n                mt: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(Image, {\n                shadowBox: \"2xl\",\n                boxSize: \"20vw\",\n                objectFit: \"cover\",\n                borderRadius: \"3px\",\n                src: compressedPicture,\n                alt: \"Compressed Image\",\n                mt: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              bg: \"linear-gradient(90deg, rgba(48,226,173,1) 0%, rgba(142,241,212,1) 100%)\",\n              width: \"100%\",\n              borderRadius: \"20px\",\n              boxShadow: \"2xl\",\n              py: 2,\n              my: 5,\n              children: /*#__PURE__*/_jsxDEV(Center, {\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  color: \"black\",\n                  fontSize: \"2xl\",\n                  fontFamily: \"poppins\",\n                  fontWeight: 600,\n                  children: \"Download Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                color: \"#FFFFFF\",\n                fontSize: \"2xl\",\n                fontFamily: \"poppins\",\n                mr: 4,\n                fontWeight: \"200\",\n                children: \"Image Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                color: \"#01CC90\",\n                fontSize: \"2xl\",\n                fontFamily: \"poppins\",\n                mr: 4,\n                children: \"116.1Kb\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        as: \"footer\",\n        mt: 10,\n        bg: \"#121633\",\n        width: \"100%\",\n        role: \"contentinfo\",\n        mx: \"auto\" // maxW=\"7xl\"\n        ,\n        py: \"12\",\n        px: {\n          base: '4',\n          md: '8'\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"10\",\n          divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 38\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: {\n              base: 'column',\n              lg: 'row'\n            },\n            spacing: {\n              base: '10',\n              lg: '28'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                boxSize: \"200px\",\n                src: logoPNG,\n                alt: \"logo PNG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: {\n                base: 'column',\n                md: 'row'\n              },\n              spacing: {\n                base: '10',\n                md: '20'\n              },\n              children: /*#__PURE__*/_jsxDEV(Center, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    color: \"White\",\n                    fontSize: \"2xl\",\n                    fontFamily: \"poppins\",\n                    fontWeight: 700,\n                    h: 70,\n                    children: \"Pemuja Hidayah-Mu\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    color: \"White\",\n                    fontSize: \"l\",\n                    fontFamily: \"poppins\",\n                    fontWeight: 400,\n                    children: \"I Gede Arya Raditya Parameswara\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    color: \"White\",\n                    fontSize: \"l\",\n                    fontFamily: \"poppins\",\n                    fontWeight: 400,\n                    children: \"Januar Budi Ghifari\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    color: \"White\",\n                    fontSize: \"l\",\n                    fontFamily: \"poppins\",\n                    fontWeight: 400,\n                    children: \"Rizky Ramadhana P. K.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: {\n              base: 'column-reverse',\n              md: 'row'\n            },\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(SocialMediaLinks, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gdTGkhHwAXMY/F3AP73T2d53giw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Informatics Sem 1/Algeo/Algeo02-20036/web-algeo/src/App.js"],"names":["React","useState","useRef","useEffect","imgDefault","uploadBigArrow","logoPNG","Copyright","SocialMediaLinks","axios","ChakraProvider","Box","Heading","Text","extendTheme","Flex","Button","Spacer","Center","Image","Stack","StackDivider","ChevronDownIcon","ChevronRightIcon","SettingsIcon","ArrowRightIcon","App","config","styles","global","body","bg","color","fonts","heading","theme","pictureInputRef","isUseRateSettings","setIsUseRateSettings","picture","setPicture","preview","setPreview","compressionRates","setCompressionRates","compressedPicture","setCompressedPicture","onChangePicture","e","file","target","files","type","substr","reader","FileReader","onloadend","result","readAsDataURL","handlePostQuery","myParams","data","rates","post","then","response","console","log","catch","error","alert","handleUseSettings","handleLowRates","handleMedRates","handleHighRates","display","event","preventDefault","current","click","objectFit","base","md","lg"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport imgDefault from \"./images/imgDefault.jpg\"\r\nimport uploadBigArrow from \"./images/uploadBigArrow.png\"\r\nimport logoPNG from \"./images/logopng.png\"\r\nimport { Copyright } from './misc/Copyright'\r\nimport { SocialMediaLinks } from './misc/SocialMediaLinks'\r\nimport axios from \"axios\"\r\n\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  extendTheme,\r\n  Flex,\r\n  Button,\r\n  Spacer,\r\n  Center,\r\n  Image,\r\n  Stack,\r\n  StackDivider,\r\n} from '@chakra-ui/react';\r\nimport { \r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n  SettingsIcon,\r\n  ArrowRightIcon\r\n} from '@chakra-ui/icons'\r\nimport \"@fontsource/poppins/600.css\"\r\nimport \"@fontsource/poppins/400.css\"\r\nimport \"@fontsource/poppins/200.css\"\r\n\r\nfunction App() {\r\n  //BG #282A37 CMPNT #01CC90\r\n  const config = {\r\n    styles: {\r\n      global: () => ({\r\n        body: {\r\n          bg: \"linear-gradient(90deg, rgba(40,43,56,1) 0%, rgba(51,55,72,1) 77%)\",\r\n          color: \"black\",\r\n        },\r\n        fonts: {\r\n          heading: \"Poppins\",\r\n          body: \"Poppins\",\r\n        }\r\n      }),\r\n    },\r\n  }\r\n  const theme = extendTheme(config);\r\n  const pictureInputRef = useRef();\r\n  const [isUseRateSettings, setIsUseRateSettings] = useState(0);\r\n  const [picture, setPicture] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const [compressionRates, setCompressionRates] = useState(\"med\");\r\n  const [compressedPicture, setCompressedPicture] = useState(\"\");\r\n\r\n  const onChangePicture = e => {\r\n      const file = e.target.files[0];\r\n      if (file && file.type.substr(0, 5) === \"image\") {\r\n        setPicture(file);\r\n      }\r\n      else {\r\n        setPicture(null);\r\n      }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (picture) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(picture);\r\n    }\r\n    else {\r\n      setPreview(null);\r\n    }\r\n  }, [picture])\r\n\r\n  function handlePostQuery() {\r\n    var myParams = {\r\n      data: preview,\r\n      rates: compressionRates\r\n    }\r\n\r\n    if (true) {\r\n      axios.post('http://127.0.0.1:5000/compress', myParams)\r\n          .then(function(response) {\r\n            console.log(response);\r\n            setCompressedPicture(response.data);\r\n          })\r\n          .catch(function(error) {\r\n            console.log(error);\r\n          });\r\n    } else {\r\n      alert(\"The search query cannot be empty\")\r\n    }\r\n  }\r\n\r\n  const handleUseSettings = () => {\r\n      isUseRateSettings ? setIsUseRateSettings(0) : setIsUseRateSettings(1);\r\n  };\r\n  const handleLowRates = () => {\r\n      setCompressionRates(\"low\");\r\n  };\r\n  const handleMedRates = () => {\r\n      setCompressionRates(\"med\");\r\n  };\r\n  const handleHighRates = () => {\r\n      setCompressionRates(\"high\");\r\n  };\r\n  console.log(\"compressedPicture :\")\r\n  console.log(compressedPicture)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <Box overflowX=\"hidden\">\r\n      <Heading color=\"#FFFFFF\" fontSize=\"5xl\" fontFamily=\"poppins\" textAlign=\"center\" mt={10} mb={3} minW=\"100vw\"> \r\n        Smart <span style={{ color: \"#01CC90\" }}>PNG</span> and <span style={{ color: \"#01CC90\" }}>JPEG</span> Compressor\r\n      </Heading>\r\n      <Text color=\"#FFFFFF\" fontFamily=\"poppins\" textAlign=\"center\" fontWeight={200} fontSize=\"md\">\r\n        An ultimate image optimizer to compress your images\r\n      </Text>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        style={{ display: 'none' }}\r\n        onChange={onChangePicture}\r\n        ref={pictureInputRef}\r\n      />\r\n      <Box mt ={10} >\r\n        <Center>\r\n          <Button onClick={(event) => {\r\n            event.preventDefault();\r\n            pictureInputRef.current.click();\r\n          }} color=\"#01CC90\" borderStyle=\"dotted\" borderWidth={5} borderColor=\"#01CC90\" width=\"30vw\" height=\"15vh\" boxShadow=\"xl\">\r\n            <Flex width=\"100%\">\r\n              <Spacer/>\r\n              <Box>\r\n                { preview ? (\r\n                  <Image\r\n                    boxSize=\"4vw\"\r\n                    objectFit=\"cover\"\r\n                    borderRadius=\"3px\"\r\n                    src={preview}\r\n                    alt=\"Upload your image\"\r\n                    style={{ objectFit: 'cover' }}\r\n                  />\r\n                ) : (\r\n                  <Image\r\n                    boxSize=\"4vw\"\r\n                    objectFit=\"cover\"\r\n                    borderRadius=\"3px\"\r\n                    src={uploadBigArrow}\r\n                    alt=\"Upload your image\"\r\n                    style={{ objectFit: 'cover' }}\r\n                  />\r\n                )}\r\n              </Box>\r\n              <Spacer/>\r\n              <Box>\r\n                <Text fontSize=\"4xl\" color=\"#FFFFFF\">Click here to <span style={{ color: \"#8ef1d4\" }}>select</span></Text>\r\n                <Text color=\"#FFFFFF\" fontSize=\"xl\" textAlign=\"left\">or <span style={{ color: \"#8ef1d4\" }}>change</span> your image.</Text>\r\n              </Box>\r\n              <Spacer/>\r\n            </Flex>\r\n          </Button>\r\n        </Center>\r\n      </Box>\r\n\r\n      <Box mt ={5} >\r\n        <Center>\r\n          <Button onClick={handleUseSettings}>\r\n          {isUseRateSettings ?\r\n          (<Text color=\"#FFFFFF\" fontSize=\"xl\" fontFamily=\"poppins\" fontWeight={200}>\r\n            <SettingsIcon mr={5}/>  \r\n            Additional settings <ChevronDownIcon/>\r\n          </Text>) :\r\n          (<Text color=\"#FFFFFF\" fontSize=\"xl\" fontFamily=\"poppins\" fontWeight={200}>\r\n            <SettingsIcon mr={5}/>  \r\n            Additional settings <ChevronRightIcon/>\r\n          </Text>)}\r\n          </Button>\r\n        </Center>\r\n      </Box>\r\n\r\n      {isUseRateSettings ?\r\n      (<Box mt = {5}>\r\n        <Center>\r\n            <Flex>\r\n              <Text color=\"#8ef1d4\" fontSize=\"xl\" fontFamily=\"poppins\" mr={4} fontWeight={400}>\r\n                Compression rates\r\n              </Text>\r\n              {compressionRates === \"low\" ? (\r\n                <Button onClick={handleLowRates} mr={4} colorScheme=\"teal\" variant=\"solid\">\r\n                  Low\r\n                </Button>\r\n              ) : (\r\n                <Button onClick={handleLowRates} mr={4} colorScheme=\"teal\" variant=\"outline\">\r\n                  Low\r\n                </Button>\r\n              )}\r\n              {compressionRates === \"med\" ? (\r\n                <Button onClick={handleMedRates} mr={4} colorScheme=\"teal\" variant=\"solid\">\r\n                  Medium\r\n                </Button>\r\n              ) : (\r\n                <Button onClick={handleMedRates} mr={4} colorScheme=\"teal\" variant=\"outline\">\r\n                  Medium\r\n                </Button>\r\n              )}\r\n              {compressionRates === \"high\" ? (\r\n                <Button onClick={handleHighRates} mr={4} colorScheme=\"teal\" variant=\"solid\">\r\n                  High\r\n                </Button>\r\n              ) : (\r\n                <Button onClick={handleHighRates} mr={4} colorScheme=\"teal\" variant=\"outline\">\r\n                  High\r\n                </Button>\r\n              )}\r\n            </Flex>\r\n        </Center>\r\n      </Box>) \r\n      : null}\r\n\r\n      <Center mt ={10}>\r\n        <Button bg=\"linear-gradient(90deg, rgba(48,226,173,1) 0%, rgba(142,241,212,1) 100%)\" \r\n                color=\"#282A37\" \r\n                h=\"6vh\" \r\n                w=\"15vw\" \r\n                boxShadow=\"2xl\"\r\n                fontSize=\"xl\"\r\n                onClick={handlePostQuery}>\r\n                Compress PNG/JPEG <ArrowRightIcon ml={2} color=\"black\"/></Button>\r\n      </Center>\r\n\r\n      <Box mt={10}>\r\n        <Center>\r\n          <Box bg=\"linear-gradient(90deg, rgba(48,226,173,1) 0%, rgba(142,241,212,1) 100%)\" width=\"24vw\" borderRadius=\"20px\" boxShadow=\"2xl\" py={2}>\r\n            <Center>\r\n            <Text color=\"black\" fontSize=\"2xl\" fontFamily=\"poppins\" fontWeight={600}>\r\n              Successfully Compressed!\r\n            </Text>\r\n            </Center>\r\n            <Center>\r\n            <Text color=\"black\" fontSize=\"xl\" fontFamily=\"poppins\">\r\n              0.5 seconds compression time\r\n            </Text>\r\n            </Center>\r\n          </Box>\r\n        </Center>\r\n      </Box>\r\n\r\n\r\n      <Box mt = {10}>\r\n        <Flex>\r\n          <Spacer />\r\n          <Box bg=\"#121633\" width=\"24vw\" px=\"2vw\" py=\"2vw\" borderRadius=\"5px\" >\r\n            <Center>\r\n              <Text color=\"#01CC90\" fontSize=\"3xl\" fontFamily=\"poppins\" mr={4} fontWeight={600}>\r\n                Before\r\n              </Text>\r\n            </Center>\r\n            <Center mb=\"1vw\">\r\n              <Image\r\n                shadowBox=\"2xl\"\r\n                boxSize=\"20vw\"\r\n                objectFit=\"cover\"\r\n                borderRadius=\"3px\"\r\n                src={imgDefault}\r\n                alt=\"Default Image\"\r\n                mt={5}\r\n              />\r\n            </Center>\r\n            <Flex>\r\n              <Text color=\"#FFFFFF\" fontSize=\"2xl\" fontFamily=\"poppins\" mr={4} fontWeight=\"200\">\r\n                Image Name\r\n              </Text>\r\n              <Spacer />\r\n              <Text color=\"#01CC90\" fontSize=\"2xl\" fontFamily=\"poppins\" mr={4}>\r\n                testImage.jpg\r\n              </Text>\r\n            </Flex>\r\n            <Flex>\r\n              <Text color=\"#FFFFFF\" fontSize=\"2xl\" fontFamily=\"poppins\" mr={4} fontWeight=\"200\">\r\n                Image Size\r\n              </Text>\r\n              <Spacer />\r\n              <Text color=\"#01CC90\" fontSize=\"2xl\" fontFamily=\"poppins\" mr={4}>\r\n                356.7Kb\r\n              </Text>\r\n            </Flex>\r\n          </Box>\r\n          <Spacer />\r\n          <Box bg=\"#121633\" width=\"24vw\" px=\"2vw\" py=\"2vw\" borderRadius=\"5px\">\r\n            <Center>\r\n              <Text color=\"#01CC90\" fontSize=\"3xl\" fontFamily=\"poppins\" mr={4} fontWeight={600}>\r\n                After\r\n              </Text>\r\n            </Center>\r\n            <Center mb=\"1vw\">\r\n              {compressedPicture === \"nothing\" ? (\r\n                <Image\r\n                  shadowBox=\"2xl\"\r\n                  boxSize=\"20vw\"\r\n                  objectFit=\"cover\"\r\n                  borderRadius=\"3px\"\r\n                  src={imgDefault}\r\n                  alt=\"Default Image\"\r\n                  mt={5}\r\n                />\r\n              ) : (\r\n                <Image\r\n                  shadowBox=\"2xl\"\r\n                  boxSize=\"20vw\"\r\n                  objectFit=\"cover\"\r\n                  borderRadius=\"3px\"\r\n                  src={compressedPicture}\r\n                  alt=\"Compressed Image\"\r\n                  mt={5}\r\n                />\r\n              )}\r\n            </Center>\r\n            <Box bg=\"linear-gradient(90deg, rgba(48,226,173,1) 0%, rgba(142,241,212,1) 100%)\" width=\"100%\" borderRadius=\"20px\" boxShadow=\"2xl\" py={2} my={5}>\r\n              <Center>\r\n              <Text color=\"black\" fontSize=\"2xl\" fontFamily=\"poppins\" fontWeight={600}>\r\n                Download Image\r\n              </Text>\r\n              </Center>\r\n            </Box>\r\n            <Flex>\r\n              <Text color=\"#FFFFFF\" fontSize=\"2xl\" fontFamily=\"poppins\" mr={4} fontWeight=\"200\">\r\n                Image Size\r\n              </Text>\r\n              <Spacer />\r\n              <Text color=\"#01CC90\" fontSize=\"2xl\" fontFamily=\"poppins\" mr={4}>\r\n                116.1Kb\r\n              </Text>\r\n            </Flex>\r\n          </Box>\r\n          <Spacer />\r\n        </Flex>\r\n      </Box>\r\n\r\n      {/* <Box mt={10} bg=\"#121633\" width=\"100%\" height=\"10vw\"> */}\r\n      <Box\r\n        as=\"footer\"\r\n        mt={10}\r\n        bg=\"#121633\"\r\n        width=\"100%\"\r\n        role=\"contentinfo\"\r\n        mx=\"auto\"\r\n        // maxW=\"7xl\"\r\n        py=\"12\"\r\n        px={{\r\n          base: '4',\r\n          md: '8',\r\n        }}\r\n      >\r\n        <Stack spacing=\"10\" divider={<StackDivider />}>\r\n          <Stack\r\n            direction={{\r\n              base: 'column',\r\n              lg: 'row',\r\n            }}\r\n            spacing={{\r\n              base: '10',\r\n              lg: '28',\r\n            }}\r\n          >\r\n            <Box>\r\n              <Image\r\n                boxSize=\"200px\"\r\n                src={logoPNG}\r\n                alt=\"logo PNG\"\r\n              />\r\n            </Box>\r\n            <Stack\r\n              direction={{\r\n                base: 'column',\r\n                md: 'row',\r\n              }}\r\n              spacing={{\r\n                base: '10',\r\n                md: '20',\r\n              }}\r\n            >\r\n          \r\n              <Center>\r\n                <Box >\r\n                  <Text color=\"White\" fontSize=\"2xl\" fontFamily=\"poppins\" fontWeight={700} h ={70}>\r\n                    Pemuja Hidayah-Mu\r\n                  </Text>\r\n                  <Text color=\"White\" fontSize=\"l\" fontFamily=\"poppins\" fontWeight={400}>\r\n                  I Gede Arya Raditya Parameswara\r\n                  </Text>\r\n                  <Text color=\"White\" fontSize=\"l\" fontFamily=\"poppins\" fontWeight={400}>\r\n                  Januar Budi Ghifari\r\n                  </Text>\r\n                  <Text color=\"White\" fontSize=\"l\" fontFamily=\"poppins\" fontWeight={400}>\r\n                  Rizky Ramadhana P. K.\r\n                  </Text>\r\n                </Box>\r\n              </Center>\r\n\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            direction={{\r\n              base: 'column-reverse',\r\n              md: 'row',\r\n            }}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Copyright />\r\n            <SocialMediaLinks />\r\n          </Stack>\r\n\r\n        </Stack>\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      </Box>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}